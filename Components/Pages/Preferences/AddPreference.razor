@inject AppService _appService
@using UserPreferencesBlazorWebApp.Models;
@using System.ComponentModel.DataAnnotations;

<div class="overlay">
	<div class="edit-form">
		<h3>Add new genre</h3>
		<div class="form-group">
			<label for="preferenceName">Genre Name:</label>
			<input type="text" class="form-control" id="preferenceName" @bind="@_preferenceName" />
		</div>
		<button class="btn btn-success" @onclick="AddPreferenceAsync">Save</button>
		<button class="btn btn-dark" @onclick="CloseOverlayAsync">Cancel</button>
	</div>
</div>

@code {
	private string? _preferenceName;                                     // local variable to capture user input
	private bool lblRequiredVisible = false;
	[Parameter]
	public EventCallback<Preference> PreferenceAdded { get; set; }       // eventcallback for 2-way binding
	[Parameter]
	public bool IsOverlayVisible { get; set; }                           // controls the overlay page
	[Parameter]
	public EventCallback<bool> IsOverlayVisibleChanged { get; set; }     // tracks event status

	private async Task AddPreferenceAsync()                              //
	{
		if (_preferenceName != null)
		{
			var newPreference = new Preference { Name = _preferenceName! }; // creates new preference object to load into database
			var preference = await _appService.AddPreferenceAsync(newPreference);  // adds new preference to table
			await PreferenceAdded.InvokeAsync(preference);                  // actual eventcallback
			await IsOverlayVisibleChanged.InvokeAsync(false);               // hides overlay
		}
		else
		{
			_preferenceName = "* Required";    // cheesy validation
		}
	}

	private async Task CloseOverlayAsync()                               // close/cancel overlay
	{
		await IsOverlayVisibleChanged.InvokeAsync(false);
	}
}
